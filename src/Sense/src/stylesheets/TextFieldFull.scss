.TextFieldBorder {
  position: absolute;
  width: 100%;
  height: 2px;
  bottom: 0;
  right: 0;
  left: 0;
  background: purple;
  transform: scaleX(0);

  @keyframes borderGrow {
    to {
      transform: scaleX(1);
    }
  }
}

.TextFieldFull {
  --bg: #f5f5f5;
  --bg-focus-within: #e0e0e0;
  --placeholder-visibility: hidden;
  background: var(--bg);
  transition: background 0.18s ease-in-out;

  &:focus-within {
    background: var(--bg-focus-within);

    & + .HelperLabel {
      transform: translateY(-80%) scale(0.8);
    }
    & ~ .TextFieldBorder {
      animation: borderGrow 0.2s ease-in forwards;
    }
  }
  &:not(:placeholder-shown) {
    & + .HelperLabel {
      transform: translateY(-80%) scale(0.8);
    }
  }
}
.TextFieldFull::placeholder {
  visibility: var(--placeholder-visibility);
}

.ErrorText {
  --color: red;
  color: var(--color);

  animation: ErrorText 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

@keyframes ErrorText {
  0% {
    transform: translateX(0.5rem);
  }
  40% {
    transform: translateX(-0.5rem);
  }
  60% {
    transform: translateX(0.5rem);
  }
  80% {
    transform: translateX(-0.5rem);
  }
  100% {
    transform: translateX(0);
  }
}

.ErrorIcon {
  animation: ErrorIconScaleIn 0.35s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transform: translateY(-50%);
}

@keyframes ErrorIconScaleIn {
  from {
    transform: scale(0.9);
  }
}
.HelperLabel {
  --color: black;
  transform: translateY(-50%);
  transition: transform 0.18s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transform-origin: top left;
  left: 28px;
  font-weight: 400;
  letter-spacing: 0.009375em;
  color: var(--color);
  pointer-events: none;
}
